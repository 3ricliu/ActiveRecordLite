q
rps_bot("srrr")
end
  counter == 1 ? true : false
  end
    return true if hash[key] != val
    val = hash[key] if val == nil
    counter += 1
  hash.keys.each do |key|
  counter = 0
  val = nil
def exist_max?(hash)
end
  hit_back.join("")
  end
    move_counter[move] += 1
    end
      hit_back << "x"
    else
      hit_back << counter_moves[(move_counter.max_by{ |key, value| value})[0]]
    if exist_max?(move_counter)
  moves.each_char do |move|
  move_counter = Hash.new(0)
  hit_back = []
  counter_moves = {"r" => "p", "p" => "s", "s" => "r"}
  # if one value stands out over ther est, play that
  # make a new hash
def rps_bot(moves)
q
obj.class
obj.x.class
obj.x= "yo"
obj.x = "yo"
obj.x
q
obj.x
obj
n
q
obj.:x
obj.x
obj
n
obj
n
x_val
q
define_method(:x)
names
