c
self.class.assoc_options
self
self.assoc_options
q
n
q
self.q
q
n
step
n
step
self.assoc_options
n
name
ls
step
q
breakfast.human
breakfast
breakfast.assoc_options
cat
breakfast.human
breakfast
q
self.assoc_options
@assoc_options
q
name
self
options
q
n
self
n
step
display self
self
q
self
quit
options.model_class
options.foreign_key
self.send(options.primary_key)
options.foreign_key
options.model_class
options
self.send([self.columns][0])
self.lname
self.columns
self.superclass
self.class
self.fname
self.human_id
self.name
self.ned
self.primary_key
self.id
self
key
key = self.send(options.primary_key)
self.send(options.primary_key)
options
q
options
q
options.primary_key
options
self.send(options.primary_key)
options
options.primary-key
options
self.send(:id)
self.id
self.columns
self.instance_variables
self.instanc_variable
self.attributes
self.attribute
self
options.primary-eky
self.send(options.primary_key)
self.send(options.foreign_key)
name
self
self.send(options.primary_key)
options.primary_key
options
options.foreign_key
self.send(options.foreign_key)
options
q
options
self
self.owner_id
self[:owner_id]
options
options.foreign_key
self
self.send(options.foreign_key)
self
options.primary_key
self.send(options.primary_key)
c
breakfast.human
human = breakfast.human
breakfast.human
breakfast
q
breakfast.human
breakfast
q
options_obj.primary_key
options_obj.model_class.where(options_obj.primary_key: 1)
options_obj.model_class.where(options_obj.primary_key => 5)
options_obj.model_class.where(options_obj.primary_key => 4)
options_obj.model_class.where(options_obj.primary_key => 3)
options_obj.model_class.where(options_obj.primary_key => 2)
options_obj.model_class.where(options_obj.primary_key => 1)
options_obj.model_class.where(options.primary_key => 1)
options_obj.model_class
options_obj
name
self
self.name
name
self
self.name
name
options_obj.model_class.where(id: options[:foreign_key])
options_obj.model_class.where(options_obj[:primary_key] => options[:foreign_key])
options_obj.model_class.where(options_obj.primary_key => options[:foreign_key]).to_s
options_obj.model_class.where(options_obj.primary_key => options[:foreign_key])
options_obj.model_class.where(options_obj.primary_key => options.foreign_key)
options_obj.model_class
self.send(options_obj.primary_key)
options_obj.primary_key
options_obj.parimary_key
options_obj.model_class.superclass
options_obj.model_class.super_class
options_obj.model_class
self.model_class
options_obj.superclass
options_obj.class
options.class
options.superclass
self.superclass
self.class
self
name
options_obj
options_obj.foreign_key
name
options
q
options
options.methods
options.where
options
options.model_class
self.model_class
options.send(:foreign_key)
options.send(@foreign_key)
options
options.foreign_key
options.send(foreign_key)
self.send(options[foreign_key])
options.foreign_key
self.primary_key
self
self.send(options.foreign_key)
options.model_class.where(options.primary_key => options.foreign_key)
options.model_class.where(options.primary_key: options.foreign_key)
options.foreign_key
options.primary_key
self
options.model_class
q
a
self.model_class
self.class.model_class
self.class
self
belongs_to_object.foreign_key
options
belongs_to_object
name
q
a = BelongsToOptions.new(name, options)
name
self.class.assoc_options
options.foreign_key
options[:foreign_key]
options.foreign_key
options[foreign_key]
options
options.foreign_key
options
options.first
options.model_class
options
self.assoc_options
self.class.assoc_options
self.class
options
name
q
n
step
q
n
q
n
step
q
Human.table_name
model_class
String.table_name
model_class.table_name
model_class
self.class_name.pluralize
self
q
self.class_name.constantize
self.class_name
self
q
objects
n
values
n
params
n
step
q
cats
q
n
cat.name
cat = cats.first
cats.first.name
cat.name
cats.length
cats
n
cats
n
q
cats.first
cats
n
q
cats
n
where_line
